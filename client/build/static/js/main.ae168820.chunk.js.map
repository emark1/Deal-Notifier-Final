{"version":3,"sources":["logo.svg","components/Header.js","components/SubmitInfo.js","App.js","serviceWorker.js","index.js","components/Background.js"],"names":["module","exports","__webpack_require__","p","Header","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","className","Component","SubmitInfo","_this","call","handleTextBoxChange","e","setState","defineProperty","target","name","deleteClick","phoneNumber","state","fetch","method","headers","Content-Type","body","JSON","stringify","handleProductClick","submitClick","sendTest","console","log","Case","Cooler","HDD","Headphones","SSD","Fan","PSU","Prebuilt","cpuCooler","Webcam","Controller","Laptop","Monitor","VR","RAM","Headset","OpticalDrive","CPU","OS","Motherboard","Speakers","Keyboard","Networking","Furniture","GPU","Mouse","Processor","HomeTheaterPC","Cables","flashDrive","Router","Mic","show","showdelete","_this2","type","onChange","placeholder","onClick","sweetalert_react_lib_default","title","text","onConfirm","lib_default","inactiveLabel","activeLabel","onToggle","App","Header_Header","SubmitInfo_SubmitInfo","Boolean","window","location","hostname","match","ReactDOM","render","style","position","top","left","width","height","particles_default","params","particles","number","density","enable","size","random","anim","speed","size_min","line_linked","move","direction","out_mode","interactivity","events","onhover","mode","onclick","modes","bubble","distance","duration","opacity","repulse","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ae168820.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport './Header.css';\n\nexport class Header extends Component {\n    render() {\n        return (\n            <div className=\"headline\">\n                <h1 className=\"text\">Reddit Deal Notifier</h1>\n            </div>\n        )\n    }\n}","import 'react-bootstrap'\nimport React, { Component } from 'react';\nimport ToggleButton from 'react-toggle-button'\nimport './SubmitInfo.css';\nimport SweetAlert from 'sweetalert-react';\nimport 'sweetalert/dist/sweetalert.css';\n\nexport class SubmitInfo extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n        phoneNumber: '',\n        Case: false,\n        Cooler: false,\n        HDD: false,\n        Headphones: false,\n        SSD: false,\n        Fan: false,\n        PSU: false,\n        Prebuilt: false,\n        cpuCooler: false,\n        Webcam: false,\n        Controller: false,\n        Laptop: false,\n        Monitor: false,\n        VR: false,\n        RAM: false,\n        Headset: false,\n        OpticalDrive: false,\n        CPU: false,\n        OS: false,\n        Motherboard: false,\n        Speakers: false,\n        Keyboard: false,\n        Networking: false,\n        Furniture: false,\n        GPU: false,\n        Mouse: false,\n        Processor: false,\n        HomeTheaterPC: false,\n        Cables: false,\n        flashDrive: false,\n        Router: false,\n        Mic: false,\n        show: false,\n        showdelete: false\n          }\n      }\n\n    handleTextBoxChange = (e) => {\n    this.setState({\n        [e.target.name]: e.target.value\n    })\n    }\n\n    deleteClick = () => {\n        let phoneNumber = this.state.phoneNumber\n        fetch('http://localhost:1010/delete-number', {\n            method: 'POST',\n            headers: {\n            'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({phoneNumber:phoneNumber})\n        })\n    }\n\n    handleProductClick = (e) => {\n    this.setState({\n        [e.target.name]: true\n    })\n    }\n\n    submitClick = () => {\n    let state = {state: this.state}\n    fetch('http://localhost:1010/add-user/', {\n        method: 'POST',\n        headers: {\n        'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(state)\n    })\n    }\n\n    sendTest = () => {\n        console.log(\"Test Trigger\")\n        fetch('http://localhost:1010/trigger-test/', {\n            method: 'POST',\n            headers: {\n            'Content-Type': 'application/json'\n            },\n        })\n    }\n\n    render() {\n        return (\n            \n            <div className=\"text\">\n            <div className=\"inputboxes\">\n                <input type=\"text\" onChange={this.handleTextBoxChange} placeholder=\"Enter Phone Number\" name=\"phoneNumber\" />\n                <div>\n                <button onClick={() => {this.setState({ show: true }); this.submitClick()}}>Submit</button>\n                <SweetAlert\n                show={this.state.show}\n                title=\"Success!\"\n                text=\"Your number and preferences have been saved.\"\n                onConfirm={() => this.setState({ show: false })}\n                />\n                </div>\n                <div>\n                <button onClick={() => {this.setState({ showdelete: true }); this.deleteClick()}}>Delete Number</button>\n                <SweetAlert\n                show={this.state.showdelete}\n                title=\"Success!\"\n                text=\"Your number has been deleted from the system.\"\n                onConfirm={() => this.setState({ showdelete: false })}\n                />\n                </div>\n                <button onClick={() => {this.sendTest()}}>Test</button>\n            </div>\n            \n            \n            <div className=\"toggleswitches\">\n\n            <div className=\"column\">\n                <div className=\"item\">        \n                <ToggleButton\n                inactiveLabel={\"X\"}\n                activeLabel={\"\"}\n                value={this.state.SSD}\n                onToggle={(value) => {\n                    this.setState({\n                    SSD: !value,\n                    })\n                }} />\n                <span>SSD</span>\n                </div>\n                <div className=\"item\">\n                <ToggleButton\n                inactiveLabel={\"X\"}\n                activeLabel={\" \"}\n                value={this.state.Case}\n                onToggle={(value) => {\n                    this.setState({\n                    Case: !value,\n                    })\n                }} /><span>Case</span>\n                </div>\n                <div className=\"item\">\n                <ToggleButton\n                inactiveLabel={\"X\"}\n                activeLabel={\" \"}\n                value={this.state.HDD}\n                onToggle={(value) => {\n                    this.setState({\n                    HDD: !value,\n                    })\n                }} /><span>HDD</span>\n                </div>\n                <div className=\"item\">\n                <ToggleButton\n                inactiveLabel={\"X\"}\n                activeLabel={\"\"}\n                value={this.state.Headphones}\n                onToggle={(value) => {\n                    this.setState({\n                    Headphones: !value,\n                    })\n                }} /><span>Headphones</span>\n                </div>\n                <div className=\"item\">\n                <ToggleButton\n                inactiveLabel={\"X\"}\n                activeLabel={\" \"}\n                value={this.state.Fan}\n                onToggle={(value) => {\n                    this.setState({\n                    Fan: !value,\n                    })\n                }} /><span>Fans</span>\n                </div>\n                <div className=\"item\">\n                <ToggleButton\n                inactiveLabel={\"X\"}\n                activeLabel={\" \"}\n                value={this.state.PSU}\n                onToggle={(value) => {\n                    this.setState({\n                    PSU: !value,\n                    })\n                }} /><span>Power Supply</span>\n                </div>\n                <div className=\"item\">\n                <ToggleButton\n                inactiveLabel={\"X\"}\n                activeLabel={\" \"}\n                value={this.state.Prebuilt}\n                onToggle={(value) => {\n                    this.setState({\n                    Prebuilt: !value,\n                    })\n                }} /><span>Prebuilt PC</span>\n                </div>\n                <div className=\"item\">\n                <ToggleButton\n                inactiveLabel={\"X\"}\n                activeLabel={\" \"}\n                value={this.state.cpuCooler}\n                onToggle={(value) => {\n                    this.setState({\n                    cpuCooler: !value,\n                    })\n                }} /><span>CPU Cooler</span>\n                </div>\n                <div className=\"item\">\n                <ToggleButton\n                inactiveLabel={\"X\"}\n                activeLabel={\" \"}\n                value={this.state.Webcam}\n                onToggle={(value) => {\n                    this.setState({\n                    Webcam: !value,\n                    })\n                }} /><span>Webcam</span>\n                </div>\n                <div className=\"item\">\n                <ToggleButton\n                inactiveLabel={\"X\"}\n                activeLabel={\" \"}\n                value={this.state.Controller}\n                onToggle={(value) => {\n                    this.setState({\n                    Controller: !value,\n                    })\n                }} /><span>Controller</span>\n                </div>\n                <div className=\"item\">\n                <ToggleButton\n                inactiveLabel={\"X\"}\n                activeLabel={\"\"}\n                value={this.state.Laptop}\n                onToggle={(value) => {\n                    this.setState({\n                    Laptop: !value,\n                    })\n                }} /><span>Laptop</span>\n                </div>\n                <div className=\"item\">\n                <ToggleButton\n                inactiveLabel={\"X\"}\n                activeLabel={\" \"}\n                value={this.state.Monitor}\n                onToggle={(value) => {\n                    this.setState({\n                    Monitor: !value,\n                    })\n                }} /><span>Monitor</span>\n                </div>\n                <div className=\"item\">\n                <ToggleButton\n                inactiveLabel={\"X\"}\n                activeLabel={\" \"}\n                value={this.state.VR}\n                onToggle={(value) => {\n                    this.setState({\n                    VR: !value,\n                    })\n                }} /><span>Virtual Reality</span>\n                </div>\n                <div className=\"item\">\n                <ToggleButton\n                inactiveLabel={\"X\"}\n                activeLabel={\"\"}\n                value={this.state.RAM}\n                onToggle={(value) => {\n                    this.setState({\n                    RAM: !value,\n                    })\n                }} /><span>RAM</span>\n                </div>\n                <div className=\"item\">\n                <ToggleButton\n                inactiveLabel={\"X\"}\n                activeLabel={\" \"}\n                value={this.state.Headset}\n                onToggle={(value) => {\n                    this.setState({\n                    Headset: !value,\n                    })\n                }} /><span>Headset</span>\n                </div>\n            </div>\n\n\n\n            <div className=\"column\">\n                <div className=\"item\">\n                <ToggleButton\n                inactiveLabel={\"X\"}\n                activeLabel={\" \"}\n                value={this.state.OpticalDrive}\n                onToggle={(value) => {\n                    this.setState({\n                    OpticalDrive: !value,\n                    })\n                }} /><span>Optical Drive</span>\n                </div>\n                <div className=\"item\">\n                <ToggleButton\n                inactiveLabel={\"X\"}\n                activeLabel={\" \"}\n                value={this.state.CPU}\n                onToggle={(value) => {\n                    this.setState({\n                    CPU: !value,\n                    })\n                }} /><span>CPU</span>\n                </div>\n                <div className=\"item\">\n                <ToggleButton\n                inactiveLabel={\"X\"}\n                activeLabel={\" \"}\n                value={this.state.OS}\n                onToggle={(value) => {\n                    this.setState({\n                    OS: !value,\n                    })\n                }} /><span>Operating System</span>\n                </div>\n                <div className=\"item\">\n                <ToggleButton\n                inactiveLabel={\"X\"}\n                activeLabel={\" \"}\n                value={this.state.Motherboard}\n                onToggle={(value) => {\n                    this.setState({\n                    Motherboard: !value,\n                    })\n                }} /><span>Motherboard</span>\n                </div>\n                <div className=\"item\">\n                <ToggleButton\n                inactiveLabel={\"X\"}\n                activeLabel={\"\"}\n                value={this.state.Speakers}\n                onToggle={(value) => {\n                    this.setState({\n                    Speakers: !value,\n                    })\n                }} /><span>Speakers</span>\n                </div>\n                <div className=\"item\">\n                <ToggleButton\n                inactiveLabel={\"X\"}\n                activeLabel={\"\"}\n                value={this.state.Keyboard}\n                onToggle={(value) => {\n                    this.setState({\n                    Keyboard: !value,\n                    })\n                }} /><span>Keyboard</span>\n                </div>\n                <div className=\"item\">\n                <ToggleButton\n                inactiveLabel={\"X\"}\n                activeLabel={\"\"}\n                value={this.state.Networking}\n                onToggle={(value) => {\n                    this.setState({\n                    Networking: !value,\n                    })\n                }} /><span>Networking</span>\n                </div>\n                <div className=\"item\">\n                <ToggleButton\n                inactiveLabel={\"X\"}\n                activeLabel={\"\"}\n                value={this.state.Furniture}\n                onToggle={(value) => {\n                    this.setState({\n                    Furniture: !value,\n                    })\n                }} /><span>Furniture</span>\n                </div>\n                <div className=\"item\">\n                <ToggleButton\n                inactiveLabel={\"X\"}\n                activeLabel={\"\"}\n                value={this.state.GPU}\n                onToggle={(value) => {\n                    this.setState({\n                    GPU: !value,\n                    })\n                }} /><span>GPU</span>\n                </div>\n                <div className=\"item\">\n                <ToggleButton\n                inactiveLabel={\"X\"}\n                activeLabel={\"\"}\n                value={this.state.Mouse}\n                onToggle={(value) => {\n                    this.setState({\n                    Mouse: !value,\n                    })\n                }} /><span>Mouse</span>\n                </div>\n                <div className=\"item\">\n                <ToggleButton\n                inactiveLabel={\"X\"}\n                activeLabel={\"\"}\n                value={this.state.Processor}\n                onToggle={(value) => {\n                    this.setState({\n                    Processor: !value,\n                    })\n                }} /><span>Processor</span>\n                </div>\n                <div className=\"item\">\n                <ToggleButton\n                inactiveLabel={\"X\"}\n                activeLabel={\"\"}\n                value={this.state.flashDrive}\n                onToggle={(value) => {\n                    this.setState({\n                    flashDrive: !value,\n                    })\n                }} /><span>Flash Drive</span>\n                </div>\n                <div className=\"item\">\n                <ToggleButton\n                inactiveLabel={\"X\"}\n                activeLabel={\"\"}\n                value={this.state.Router}\n                onToggle={(value) => {\n                    this.setState({\n                    Router: !value,\n                    })\n                }} /><span>Router</span>\n                </div>\n                <div className=\"item\">\n                <ToggleButton\n                inactiveLabel={\"X\"}\n                activeLabel={\"\"}\n                value={this.state.Mic}\n                onToggle={(value) => {\n                    this.setState({\n                    Mic: !value,\n                    })\n                }} /><span>Mic</span>\n                </div>\n                <div className=\"item\">\n                <ToggleButton\n                inactiveLabel={\"X\"}\n                activeLabel={\"\"}\n                value={this.state.Cooler}\n                onToggle={(value) => {\n                    this.setState({\n                    Cooler: !value,\n                    })\n                }} /><span>Cooler</span>\n                </div>\n            </div>\n            </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { Header } from './components/Header'\nimport { SubmitInfo } from './components/SubmitInfo'\nimport SweetAlert from 'sweetalert-react';\n\nclass App extends Component {\n\n  constructor() {\n    super()\n\n  }\n\n  render() {\n    return (\n      <div>\n      <div className=\"App\">\n        <Header></Header>\n      </div>\n      <div>\n        <SubmitInfo />\n      </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Background from \"./components/Background\";\n\n\n\nReactDOM.render(<div><div\n    style={{\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      width: \"100%\",\n      height: \"100%\"\n    }}\n    >\n    <Background />\n          <div\n          style={{\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            width: \"100%\",\n            height: \"100%\"\n          }}\n        >\n<App /></div></div></div>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\nimport Particles from 'react-particles-js';\n\nexport default () => (\n    <div\n      style={{\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\"\n      }}\n    >\n<Particles\n    params={{\n\t    \"particles\": {\n\t        \"number\": {\n\t            \"value\": 30,\n\t            \"density\": {\n\t                \"enable\": false\n\t            }\n\t        },\n\t        \"size\": {\n\t            \"value\": 3,\n\t            \"random\": true,\n\t            \"anim\": {\n\t                \"speed\": 4,\n\t                \"size_min\": 0.3\n\t            }\n\t        },\n\t        \"line_linked\": {\n\t            \"enable\": false\n\t        },\n\t        \"move\": {\n\t            \"random\": true,\n\t            \"speed\": 1,\n\t            \"direction\": \"top\",\n\t            \"out_mode\": \"out\"\n\t        }\n\t    },\n\t    \"interactivity\": {\n\t        \"events\": {\n\t            \"onhover\": {\n\t                \"enable\": false,\n\t                \"mode\": \"bubble\"\n\t            },\n\t            \"onclick\": {\n\t                \"enable\": true,\n\t                \"mode\": \"repulse\"\n\t            }\n\t        },\n\t        \"modes\": {\n\t            \"bubble\": {\n\t                \"distance\": 250,\n\t                \"duration\": 2,\n\t                \"size\": 0,\n\t                \"opacity\": 0\n\t            },\n\t            \"repulse\": {\n\t                \"distance\": 400,\n\t                \"duration\": 4\n\t            }\n\t        }\n\t    }\n\t}} /></div>)"],"sourceRoot":""}